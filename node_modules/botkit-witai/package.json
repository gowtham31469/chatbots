{
  "name": "botkit-witai",
  "version": "1.0.8",
  "description": "Botkit middleware for Wit.ai",
  "main": "index.js",
  "scripts": {
    "start": "node src/botkit-witai.js"
  },
  "keywords": [
    "botkit",
    "wit.ai",
    "slack",
    "facebook",
    "messenger"
  ],
  "bugs": {
    "url": "https://github.com/SnowStormIO/botkit-witai/issues"
  },
  "engines": {
    "node": "6.6.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SnowStormIO/botkit-witai"
  },
  "author": {
    "name": "Rafael Casuso"
  },
  "license": "MIT",
  "dependencies": {
    "node-wit": "^4.2.0"
  },
  "readme": "# Botkit Middleware for Wit.ai\n[![npm](https://img.shields.io/npm/dt/botkit-witai.svg)]() [![npm](https://img.shields.io/npm/l/botkit-witai.svg?style=flat)]() [![GitHub stars](https://img.shields.io/github/stars/SnowStormIO/botkit-witai.svg?style=social&label=Star)]()\n\nUnleash the power of Wit.ai's Natural Language Processing to your Botkit bot with this middleware. All incoming text messages (by default it filters payload derived from Facebook Messenger buttons like *Quick Replies* and *Postbacks*) will go through Wit.ai's API to extract useful *entities* that will be added to the message object so they can be used in the controller.\n\n**This Botkit Middleware is maintained up-to-date with both Wit.ai and Botkit latest versions and it works with all Botkit's supported messaging platforms.** \n## Installation\nIn order to utilize wit.ai's service you will need to create an account at [Wit.ai](https://wit.ai/). Grab the *access token* at Settings as shown below:\n\n![Screenshot](https://s30.postimg.org/5o330d21t/Wit_ai_screenshot.png)\n\n\nNext you will need to add botkit-witai as a dependency to your Botkit bot:\n\n```\nnpm install --save botkit-witai\n```\n\nEnable the middleware with the following options:\n* `accessToken` - (**required**) Token to use Wit.ai API\n* `minConfidence` - (*optional*) Minimum Wit.ai's entities confidence value to be considered. Valid value range is from **0.1** to **1**. **0.5** is the default.\n* `logLevel` - (*optional*) Log level for the middleware. Valid values are: **'debug', 'info', 'warning', 'error'**.\n\nExample:\n```js\nvar wit = require('botkit-witai')({\n    accessToken: <my_witai_token>,\n    minConfidence: 0.6,\n    logLevel: 'debug'\n});\n\ncontroller.middleware.receive.use(wit.receive);\n```\n## Usage\nYou will receive in the callback of the `controller.hears` the Wit.ai's entities defined in your panel as shown below that match the message received:\n\n![Screenshot](https://s24.postimg.org/3xbepffo5/Wit_ai_screenshot_2.png)\n\nExample:\n\n```js\ncontroller.hears(['spa'], 'message_received', wit.hears, function (bot, message) {\n      console.log(\"Wit.ai detected entities\", message.entities);\n      //Example message: \"I want a spa treatment\"\n      //    {\n      //      \"spa\": [\n      //        {\n      //          \"confidence\": 1,\n      //          \"type\": \"value\",\n      //          \"value\": \"spa\"\n      //        }\n      //      ]\n      //    }\n      \n      //Your code here\n});\n```\n##Roadmap\n\n* Wit.ai's conversation actions linked to Botkit's conversation steps.\n* Functional testing coverage.\n\n##Author\n**Rafael Casuso**\n\nGithub: [@RafaelCasuso](https://github.com/RafaelCasuso)\n\nTwitter: [@Rafael_Casuso](https://twitter.com/rafael_casuso)",
  "readmeFilename": "README.md",
  "_id": "botkit-witai@1.0.8",
  "dist": {
    "shasum": "29e41b3024776445daf55ee216bdb2a22d345e45"
  },
  "_from": "botkit-witai@^1.0.8",
  "_resolved": "https://registry.npmjs.org/botkit-witai/-/botkit-witai-1.0.8.tgz"
}
